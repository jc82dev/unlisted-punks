(function(e){const t=1e4,n={MALE:29527680,FEMALE:6092800};e.MAX_TOKENID=n.MALE+n.FEMALE-1,e.MIN_TOKENID=t;const a=(e,t)=>e.localeCompare(t),s=(e,t)=>e===t?0:"none"===e?-1:"none"===t?1:e.localeCompare(t);e.SPRITES={male:{skin:{alien:1,ape:3,zombie:13,"human-lighter":11,"human-light":10,"human-dark":8,"human-darker":9},blemish:{none:null,mole:84,"rosy-cheeks":85,spots:86},ear:{none:null,earring:87},eyes:{none:null,"3d-glasses":88,"big-shades":89,"classic-shades":90,"clown-eyes-blue":91,"clown-eyes-green":92,"eye-mask":93,"eye-patch":94,"horned-rim-glasses":95,"nerd-glasses":96,"regular-shades":97,"small-shades":98,vr:99},"facial-hair":{none:null,"big-beard":100,chinstrap:101,"front-beard-dark":102,"front-beard":103,goat:104,handlebars:105,"luxurious-beard":106,mustache:107,muttonchops:108,"normal-beard-black":109,"normal-beard":110,"shadow-beard":111},head:{none:null,bandana:112,beanie:113,"cap-forward":114,cap:115,"clown-hair-green":116,"cowboy-hat":117,"crazy-hair":118,"do-rag":119,fedora:120,"frumpy-hair":121,headband:122,hoodie:123,"knitted-cap":124,"messy-hair":125,"mohawk-dark":126,"mohawk-thin":127,mohawk:128,"peak-spike":129,"police-cap":130,"purple-hair":131,"shaved-head":132,"stringy-hair":133,"top-hat":134,"vampire-hair":135,"wild-hair":136},mouth:{none:null,"buck-teeth":137,smile:143,frown:141},"mouth-accessory":{none:null,cigarette:138,pipe:139,vape:140,"medical-mask":142},neck:{none:null,"gold-chain":144,"silver-chain":145},nose:{none:null,"clown-nose":146}},female:{skin:{alien:0,ape:2,zombie:12,"human-lighter":7,"human-light":6,"human-dark":4,"human-darker":5},blemish:{none:null,mole:14,"rosy-cheeks":15,spots:16},ear:{none:null,earring:17},eyes:{none:null,"3d-glasses":18,"big-shades":19,"blue-eye-shadow":20,"classic-shades":21,"clown-eyes-blue":22,"clown-eyes-green":23,"eye-mask":24,"eye-patch":25,"green-eye-shadow":26,"horned-rim-glasses":27,"nerd-glasses":28,"purple-eye-shadow":29,"regular-shades":30,"small-shades":31,vr:32,"welding-goggles":33},head:{none:null,bandana:34,beanie:35,"blonde-bob":36,"blonde-short":37,"cap-forward":38,cap:39,"clown-hair-green":40,"cowboy-hat":41,"crazy-hair":42,"dark-hair":43,"do-rag":44,fedora:45,"frumpy-hair":46,"half-shaved":47,headband:48,hoodie:49,"knitted-cap":50,"messy-hair":51,"mohawk-thin":52,"mohawk-dark":53,mohawk:54,"orange-side":55,pigtails:56,"pilot-helmet":57,"pink-with-hat":58,"police-cap":59,"purple-hair":60,"red-mohawk":61,"shaved-head":62,"straight-hair-blonde":63,"straight-hair-dark":64,"straight-hair":65,"stringy-hair":66,"tassle-hat":67,tiara:82,"top-hat":68,"wild-blonde":69,"wild-hair":70,"wild-white-hair":71},mouth:{none:null,"black-lipstick":75,"hot-lipstick":76,"purple-lipstick":78},"mouth-accessory":{none:null,cigarette:72,pipe:73,vape:74,"medical-mask":77},neck:{none:null,choker:79,"gold-chain":80,"silver-chain":81},nose:{none:null,"clown-nose":83}}},e.ATTRIBUTES_LIST=["skin","blemish","ear","head","mouth","neck","nose","eyes","facial-hair","mouth-accessory"],e.ATTRIBUTES={base:["male-alien","male-ape","male-zombie","male-human-lighter","male-human-light","male-human-dark","male-human-darker","female-alien","female-ape","female-zombie","female-human-lighter","female-human-light","female-human-dark","female-human-darker"],blemish:["mole","rosy-cheeks","spots"],ear:["earring"],eyes:["3d-glasses","big-shades","blue-eye-shadow","classic-shades","clown-eyes-blue","clown-eyes-green","eye-mask","eye-patch","green-eye-shadow","horned-rim-glasses","nerd-glasses","purple-eye-shadow","regular-shades","small-shades","vr","welding-goggles"],"facial-hair":["big-beard","chinstrap","front-beard","front-beard-dark","goat","handlebars","luxurious-beard","mustache","muttonchops","normal-beard","normal-beard-black","shadow-beard"],head:["bandana","beanie","blonde-bob","blonde-short","cap","cap-forward","clown-hair-green","cowboy-hat","crazy-hair","dark-hair","do-rag","fedora","frumpy-hair","half-shaved","headband","hoodie","knitted-cap","messy-hair","mohawk","mohawk-dark","mohawk-thin","orange-side","peak-spike","pigtails","pilot-helmet","pink-with-hat","police-cap","purple-hair","red-mohawk","shaved-head","straight-hair","straight-hair-blonde","straight-hair-dark","stringy-hair","tassle-hat","tiara","top-hat","vampire-hair","wild-blonde","wild-hair","wild-white-hair"],mouth:["black-lipstick","buck-teeth","frown","hot-lipstick","purple-lipstick","smile"],"mouth-accessory":["cigarette","pipe","vape","medical-mask"],neck:["choker","gold-chain","silver-chain"],nose:["clown-nose"]},e.isValidTokenId=(e=>{let a=!1;return isNaN(e)||(e=parseInt(e),e-=t,a=0<=e&&e<n.MALE+n.FEMALE),a}),e.labelize=(e=>e?e.replace(/-/g," ").replace(/(^\w{1})|(\s+\w{1})/g,e=>e.toUpperCase()):""),e.getTokenId=((o,i=!1)=>{const r=o.gender;let l="female"===r?n.MALE:0;const d=e.SPRITES[r],c=Object.keys(e.SPRITES[r]).sort(a);let u=1;for(let e=c.length-1;e>=0;e--){const t=c[e],n=o[t]||"none",a=Object.keys(d[t]).sort(s);let r=a.indexOf(n||null);if(r<0){if(!i)throw new Error(`"${n}" is not a valid value for attribute "${t}"`);r=0}l+=r*u;const h=a.length;u*=h}return l+t}),e.getPunkFromTokenId=(o=>{o-=t;const i={gender:null};o<n.MALE?i.gender="male":(i.gender="female",o-=n.MALE);const r=i.gender,l=e.SPRITES[r],d=Object.keys(e.SPRITES[r]).sort(a),c=[];let u=1;for(let e=d.length-1;e>=0;e--){const t=d[e],n=Object.keys(l[t]),a=n.length;c.unshift(u),u*=a}for(let e=0;e<d.length;e++){const t=d[e],n=c[e],a=Math.floor(o/n),r=Object.keys(l[t]).sort(s);i[t]=r[a],"none"===i[t]&&(i[t]=null),o-=a*n}return i})})("undefined"==typeof window?module.exports:window),(()=>{const e={API_ENDPOINT:"https://us-central1-unlisted-punks.cloudfunctions.net/apidev"},t="ethereum",n="Select...",a={METAMASK_NOT_FOUND:'You need an Ethereum wallet to mint NFTs! You can download metamask <a target="_blank" href="https://metamask.io/download/">here</a>',MINTING_IN_PROGRESS:'<img src="/assets/img/loader.gif"><span>It can take a few seconds...</span>',MINT_SUCCESS:{ethereum:'Punks minted successfully! Click <a target="_blank" href="//etherscan.io/tx/{tx}">here</a> to check the transaction on etherscan',bsc:'Punks minted successfully! Click <a target="_blank" href="//bscscan.com/tx/{tx}">here</a> to check the transaction on bscscan',polygon:'Punks minted successfully! Click <a target="_blank" href="//polygonscan.com/tx/{tx}">here</a> to check the transaction on polygonscan'}};let s=null;const o={gender:"male",skin:"human-light",blemish:null,ear:null,eyes:null,"facial-hair":null,head:null,mouth:null,"mouth-accessory":null,neck:null,nose:null},i={...o};let r=!1,l=!1,d=null,c=null;const u=document.querySelector("#modal"),h=u.querySelector("#modal .modal-content"),m=document.querySelector("#modalMessage"),p=document.querySelector("#modalMessage .modal-content"),y=Array.from(document.querySelectorAll(".combo")),g=document.querySelector("#btnCloseModal"),w=document.querySelector("#btnClosePunkViewer"),k=document.querySelector("#btnAddToCart"),b=document.querySelector("#btnConnectWallet"),f=document.querySelector("#btnMintFirstButton"),v=document.querySelector(".result"),S=document.querySelector("#cartItems"),T=document.querySelector("#btnMint"),E=document.querySelector("#closeMessageButton"),I=document.querySelector("#cartTotal"),M=document.querySelector(".wallet"),$=document.querySelector(".wallet-list"),L=document.querySelector(".builder"),A=document.querySelector("#punkViewer"),q=document.querySelector("#punkViewer .punk-viewer-item"),P=document.querySelector("#punkViewerTitle"),N=document.querySelector("#traitsList"),O=document.getElementById("favicon"),R=document.getElementById("currentPrice"),C=Array.from(document.querySelectorAll(".punk-grid-item")),H=document.getElementById("supplyEthereum"),_=document.getElementById("supplyBsc"),z=document.getElementById("supplyPolygon"),j=()=>Array.from(S.querySelectorAll(".item")).map(e=>JSON.parse(decodeURIComponent(e.dataset.mintrequest))),F=async t=>{window.progress.start(),r=!0,W();let n=null;const a=Q();try{const o=await fetch(`${e.API_ENDPOINT}?method=getPunk&tokenId=${t}&chain=${a}`);if(o.ok){const e=await o.json();return s=e.settings,te(),e}n=await o.text()}catch(e){n=e.message}finally{r=!1,window.progress.stop(),W(n)}},x=(e,t,n,a)=>(n=n||"var(--punk--comboSize)",a=a||i.gender,e&&t?"gender"!==e?SPRITES[a][e]?`calc(-${SPRITES[a][e][t]} * ${n})`:null:`calc(-${SPRITES[t].skin[i.skin]} * ${n})`:null),B=(e,t=u)=>{e?(document.body.style.overflow="hidden",t.classList.add("visible")):(document.body.style.overflow="initial",t.classList.remove("visible"))},U=(e,t="success")=>{e?(document.body.style.overflow="hidden",m.dataset.type=t,m.classList.add("visible"),p.innerHTML=e):(document.body.style.overflow="initial",m.classList.remove("visible"),p.innerHTML="")},D=e=>{const t=e.dataset.combo,a=i[t];e.dataset.empty=!a;const s=x("skin",i.skin);e.innerHTML=`\n    <div class="layer-container" style="background-image:${["skin","gender"].includes(t)?"":"url('assets/img/sprites.png')"};background-position:${s}">\n        <img class="layer" src="assets/img/sprites.png" style="object-position:${x(t,a)}" />\n    </div>\n    <div class="label-container">\n        <div class="label-head">${window.labelize(e.dataset.combo)}</div>\n        <div class="label">${a?window.labelize(a):n}</div>\n    </div>`,e.addEventListener("click",()=>{document.body.style.overflow="hidden";const e=x("skin",i.skin);let n=null;n="gender"===t?{male:window.SPRITES.male.skin[i.skin],female:window.SPRITES.female.skin[i.skin]}:window.SPRITES[i.gender][t];let a='<div class="options">';Object.keys(n).map(e=>({id:e,pos:n[e]})).forEach(n=>{let s=!1;"none"!==n.id||"none"!==i[t]&&i[t]?"none"!==n.id&&SPRITES[i.gender][t]&&SPRITES[i.gender][t][n.id]&&(s=i[t]===n.id):s=!0,a+=`<div data-id="${n.id}" data-empty="${"none"===n.id}" data-selected="${s}" class="option" onclick="selectSprite('${t}','${n.id}')">\n                <div class="layer-container" style="background-image:${["skin","gender"].includes(t)?"":"url('assets/img/sprites.png')"};background-position:${e}">\n                    <img class="layer" src="assets/img/sprites.png" style="object-position:${x(t,n.id)}" />\n                </div>\n                <div class="label">${window.labelize(n.id)}</div>\n            </div>`}),a+="</div>",h.innerHTML=a,B(!0)})},K=()=>{const e=x("skin",i.skin);y.forEach(t=>{const a=t.dataset.combo,s=i.gender,o=i[a],r="gender"!==a&&!window.SPRITES[s][a];t.dataset.hidden=r;const l=!o||"none"===o;t.dataset.empty=l;const d=t.querySelector(".layer"),c=t.querySelector(".label");d.style=`object-position:${x(a,o)}`,d.dataset.empty=l,c.innerHTML=l?n:window.labelize(o);const u=t.querySelector(".layer-container");if(u.style.backgroundPosition=e,"gender"===a)newPos=e;else if(i[a]&&SPRITES[s][a]&&void 0!==SPRITES[s][a][i[a]])newPos=x(a,i[a]);else{t.dataset.empty="true",newPos=x(a,null);const e=t.querySelector(".label");e.innerHTML=n}t.querySelector(".layer").style.objectPosition=newPos})},V=({node:e,state:t,imgSelector:n,size:a}={})=>{e=e||v,t=t||i,n=n||".result > img",a=a||"var(--punk--result)",t===i&&(e.dataset.tokenid=window.getTokenId(i,!0));const s=Array.from(document.querySelectorAll(n));s.forEach(e=>{if(t[e.dataset.layer]&&"none"!==t[e.dataset.layer]&&window.SPRITES[t.gender][e.dataset.layer]&&void 0!==window.SPRITES[t.gender][e.dataset.layer][t[e.dataset.layer]]){e.dataset.empty="false";const n=x(e.dataset.layer,t[e.dataset.layer],a,t.gender);n?e.style.objectPosition=n:e.dataset.empty="true"}else e.dataset.empty="true"})},W=e=>{e&&U(e,"error");const t=parseInt(v.dataset.tokenid),n=j();r||l?(k.setAttribute("disabled",""),r&&(k.innerHTML="Loading...")):(k.innerHTML="Add to cart",n.find(e=>e.id===t)?k.setAttribute("disabled",""):k.removeAttribute("disabled")),n.length?l?(T.classList.remove("hidden"),T.setAttribute("disabled",""),T.innerHTML="Minting..."):(T.innerHTML=`Mint ${n.length} punk${n.length>1?"s":""}`,T.classList.remove("hidden"),T.removeAttribute("disabled")):T.classList.add("hidden");let a=0;n.forEach(e=>a+=e.price),I.innerHTML=Math.round(1e3*parseFloat(a/1e9))/1e3},G=()=>{const e=parseInt(v.dataset.tokenid),t=j();e&&!t.includes(t=>e===t.id)&&(async()=>{const t=await F(e);if(t){const n=`https://infura-ipfs.io/ipfs/${t.imageCid}`;S.insertAdjacentHTML("beforeend",`<div data-tokenid="${t.tokenId}" data-price="${t.price}" data-mintrequest="${encodeURIComponent(JSON.stringify(t.mintRequest))}" class="item" title="#${t.tokenId}">\n              <a href="#${t.tokenId}" class="img-container"><img src="${n}" /></a>\n              <button>Remove</button>\n            </div>`),O.setAttribute("href",n),O.dataset.updated="true",W(),Object.assign(i,o),K(),V();const a=S.querySelector(`[data-tokenid="${e}"] > button`);a&&a.addEventListener("click",()=>{const t=S.querySelector(`[data-tokenid="${e}"]`);t&&t.remove(),W()})}})()},J=async()=>{let e=null;try{const t=await ee(!0);if("not-found"===t)U(a.METAMASK_NOT_FOUND,"error");else if("connected"===t){const e=Q(),t=s[e].CONTRACT;if(t){const n=j();if(n.length){window.progress.start(),l=!0,W();const s=n.reduce((e,t)=>e+t.price,0);let o=await t.methods.mint(n).estimateGas({from:c});o+=Math.floor(.1*o);const i=await t.methods.mint(n).send({from:c,gas:o.toString(),value:d.utils.toWei(s.toString(),"gwei")}).once("transactionHash",()=>{U(a.MINTING_IN_PROGRESS,"mint")});U(a.MINT_SUCCESS[e].replace("{tx}",i.transactionHash)),S.innerHTML="",ne()}}}else await ee()}catch(t){e=t.message}finally{l=!1,window.progress.stop(),W(e)}},X=async(e=null)=>{const t=await ee(!0,e);"not-found"===t&&U(a.METAMASK_NOT_FOUND,"error")},Y=async e=>{let t=null;try{const n=await e.request({method:"eth_chainId"});t=n?Object.keys(s).find(e=>s[e].chainId===n):null}catch(e){console.error(`error retrieving metamask current chain: ${e.message}`)}return t},Q=()=>{const e=document.querySelector('.chain[data-selected="true"]');return e?e.dataset.chain:null},Z=async(e,n=null)=>{const a=n||Q()||t,o=s[a].chainId,i=await Y(e),r=i?s[i].chainId:null;if(i!==r)try{await e.request({method:"wallet_switchEthereumChain",params:[{chainId:o}]})}catch(e){U(`Please switch your network to "${a} mainnet" in your ethereum wallet`,"error")}},ee=async(t,n=null)=>{window.progress.start();try{let a="not-found",o=Web3.givenProvider;if(!s){const t=await fetch(`${e.API_ENDPOINT}?method=getSettings`);if(t.ok)s=await t.json(),te();else{const e=await t.text();if(e)throw new Error(e)}}if(o){const e=await Y(o);oe(e,!0),d||(d=new Web3(o),o.on("connect",()=>ee()),o.on("disconnect",()=>ee()),o.on("chainChanged",e=>{ee(),S.innerHTML="",W(),(async()=>{const e=await Y(o);oe(e)})()}),o.on("accountsChanged",()=>ee()));const i=await d.eth.getAccounts();if(c=i[0],!c&&t){const e=await o.request({method:"eth_requestAccounts"});c=e[0]}if(c){const i=n||Q();t&&e!==i?(await Z(o,i),a="invalid-chain"):(a="connected",e&&oe(e),["ethereum","polygon","bsc"].forEach(e=>{s[e].CONTRACT=new d.eth.Contract(s.abi,s[e].address)}))}else a="disconnected"}return document.querySelector("body").dataset.web3=a,await ne(),a}catch(e){console.error(e.stack),U(e.message,"error")}finally{window.progress.stop()}},te=()=>{document.body.dataset.settingsloaded="true";const e=Q()||t,n=s[e].price.current;R.innerHTML=`${Math.round(1e3*n)/1e3} ${s[e].price.symbol}`,H.innerHTML=s.ethereum.supply,_.innerHTML=s.bsc.supply,z.innerHTML=s.polygon.supply},ne=async()=>{const e=Q(),t=e?s[e].CONTRACT:null;if(t){Array.from(document.querySelectorAll(".walletChainName")).forEach(t=>t.innerHTML=e),M.dataset.status="loading";try{const e=[];let n=!1,a="";const s=v.innerHTML;do{let o=null;try{o=await t.methods.tokenOfOwnerByIndex(c,e.length).call({from:c});const i=window.getPunkFromTokenId(parseInt(o));a+=`<div onclick="window.openOpenSea('${o}')" title="#${o}" class="wallet-item-container"><div data-tokenid="${o}" data-walletitem="${e.length}" class="wallet-item">${s}</div><div class="wallet-item-tokenid">${o}</div></div>`,e.push({...i,base:`${i.gender}-${i.skin}`})}catch(e){n=!0}}while(!n);$.innerHTML=a,setTimeout(()=>{const t=Array.from(document.querySelectorAll(".wallet-item"));t.forEach((t,n)=>{const a=e[n],s="var(--punk--cartSize)",o=t,i=`[data-walletitem="${n}"] > img`;V({node:o,state:a,imgSelector:i,size:s})}),M.dataset.status=t.length?"connected":"empty"})}catch(e){M.dataset.status="disconnected",U(e.message,"error")}}else M.dataset.status="disconnected"},ae=()=>{const e=window.location.hash;let t=!1;if(e&&/^#[0-9]+$/.test(e))try{const n=parseInt(e.replace("#",""));if(n>=window.MIN_TOKENID&&n<=MAX_TOKENID){P.innerHTML=n,q.innerHTML=v.innerHTML;const e=window.getPunkFromTokenId(n),a={...e,base:`${e.gender}-${e.skin}`},s="var(--punk--result)",o=q,i=".punk-viewer-item > img";V({node:o,state:a,imgSelector:i,size:s});let r="";["gender",...window.ATTRIBUTES_LIST].forEach(t=>{e[t]&&(r+=`<div class="punk-viewer-traits-item"><div>${window.labelize(t)}</div><div>${window.labelize(e[t])}</div></div>`)}),N.innerHTML=r,t=!0}}catch(t){console.error(`invalid hash => ${e}`)}B(t,A)},se=()=>{B(!1),B(!1,A),U(null),window.history.pushState(null,null," ")},oe=(e,t)=>{if(e){const n=Q();if(n!==e){const n=document.querySelector('.chain[data-selected="true"]');n&&(n.dataset.selected="false"),document.querySelector(`.chain[data-chain="${e}"]`).dataset.selected="true",te(),t||setTimeout(()=>ee(!0))}}else{const e=document.querySelector('.chain[data-selected="true"]');e&&(e.dataset.selected="false")}};window.addEventListener("keydown",e=>{"Escape"===e.key&&se()}),window.selectSprite=((e,t)=>{i[e]=t,V();const n=Array.from(u.querySelectorAll(".option"));n.forEach(e=>e.dataset.selected=e.dataset.id===t),B(!1),document.body.style.overflow="initial",K(),W()}),window.openOpenSea=(e=>{const t=Q();if("bsc"===t)window.location.assign(`#${e}`);else{let n="https://opensea.io/assets/";"polygon"===t&&(n+="matic/"),window.open(`${n}/${s[t].address}/${e}`,"_blank").focus()}}),window.openPriceEvolution=(()=>{const e=Q()||t,n=s[e].price.evolution;n.find(e=>e[0]===s.supply)||n.push([s.supply,s[e].price.current]);const a=`\n    <div data-active="false" class="price-evolution">\n      <div class="chart-container">\n        <img src="/assets/img/chart.svg" />\n        <div class="chart-line" style="left:${100*Math.max(.01,Math.round(s.supply/1e6))}%"></div>\n      </div>\n      <div class="chart-table">\n        ${n.sort((e,t)=>e[0]-t[0]).map(t=>`\n            <div data-current="${t[0]===s.supply?"true":"false"}" class="chart-table-item">\n              <div class="chart-table-item-label">#${t[0].toLocaleString()}</div>\n              <div class="sep"></div>\n              <div class="chart-table-item-price">${(t[1]<10?Math.round(1e3*t[1])/1e3:Math.round(t[1])).toLocaleString()} ${s[e].price.symbol}\n              </div>\n            </div>`).join("")}\n      </div>\n      <div class="chart-legend">\n            <span>*</span> current price\n      </div>\n    </div>`;U(a,"price"),setTimeout(()=>{const e=document.querySelector(".price-evolution");e&&(e.dataset.active="true")},100)}),window.onWeb3Loaded=(async()=>ee()),window.addEventListener("hashchange",ae),y.forEach(e=>D(e)),k.addEventListener("click",G),T.addEventListener("click",J),b.addEventListener("click",X),f.addEventListener("click",()=>L.scrollIntoView({behavior:"smooth"})),g.addEventListener("click",se),w.addEventListener("click",se),E.addEventListener("click",()=>U(null)),Array.from(document.querySelectorAll(".chain")).forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.chain;"connected"===document.querySelector("body").dataset.web3?Z(Web3.givenProvider,t):X(t)})}),V(),ae();let ie=1;(function e(){O.dataset.updated||(O.setAttribute("href",`/assets/img/favicon/${ie}.png`),ie++,ie>9&&(ie=0)),C.forEach(e=>{e.dataset.initialized||(e.innerHTML=v.innerHTML,e.dataset.initialized="true");const t=Math.floor(36e6*Math.random()),n=window.getPunkFromTokenId(t),a="var(--punk--cartSize)",s=e,o=`[data-griditem="${e.dataset.griditem}"] > img`;V({node:s,state:n,imgSelector:o,size:a})}),setTimeout(e,1e3)})()})(),(e=>{const t=200;let n=!1;const a=()=>{if(n){const t=(100-n.dataset.value)*(.1*Math.random());n.dataset.value=parseFloat(n.dataset.value)+t,n.style.width=`${n.dataset.value}%`,e.requestAnimationFrame(a.bind(null,n))}};e.progress={start(){n&&document.body.removeChild(n),n=document.createElement("div"),n.id="progress",n.dataset.value=0,document.body.appendChild(n),a(n)},stop:async()=>new Promise(a=>{const s=n;n=null,e.requestAnimationFrame(()=>{s&&(s.style.width="100%",setTimeout(()=>{document.body.removeChild(s),a()},t))})})}})(window);
