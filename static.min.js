(function(e){const t=1e4,a={MALE:29527680,FEMALE:6092800};e.MAX_TOKENID=a.MALE+a.FEMALE-1,e.MIN_TOKENID=t;const n=(e,t)=>e.localeCompare(t),s=(e,t)=>e===t?0:"none"===e?-1:"none"===t?1:e.localeCompare(t);e.SPRITES={male:{skin:{alien:1,ape:3,zombie:13,"human-lighter":11,"human-light":10,"human-dark":8,"human-darker":9},blemish:{none:null,mole:84,"rosy-cheeks":85,spots:86},ear:{none:null,earring:87},eyes:{none:null,"3d-glasses":88,"big-shades":89,"classic-shades":90,"clown-eyes-blue":91,"clown-eyes-green":92,"eye-mask":93,"eye-patch":94,"horned-rim-glasses":95,"nerd-glasses":96,"regular-shades":97,"small-shades":98,vr:99},"facial-hair":{none:null,"big-beard":100,chinstrap:101,"front-beard-dark":102,"front-beard":103,goat:104,handlebars:105,"luxurious-beard":106,mustache:107,muttonchops:108,"normal-beard-black":109,"normal-beard":110,"shadow-beard":111},head:{none:null,bandana:112,beanie:113,"cap-forward":114,cap:115,"clown-hair-green":116,"cowboy-hat":117,"crazy-hair":118,"do-rag":119,fedora:120,"frumpy-hair":121,headband:122,hoodie:123,"knitted-cap":124,"messy-hair":125,"mohawk-dark":126,"mohawk-thin":127,mohawk:128,"peak-spike":129,"police-cap":130,"purple-hair":131,"shaved-head":132,"stringy-hair":133,"top-hat":134,"vampire-hair":135,"wild-hair":136},mouth:{none:null,"buck-teeth":137,smile:143,frown:141},"mouth-accessory":{none:null,cigarette:138,pipe:139,vape:140,"medical-mask":142},neck:{none:null,"gold-chain":144,"silver-chain":145},nose:{none:null,"clown-nose":146}},female:{skin:{alien:0,ape:2,zombie:12,"human-lighter":7,"human-light":6,"human-dark":4,"human-darker":5},blemish:{none:null,mole:14,"rosy-cheeks":15,spots:16},ear:{none:null,earring:17},eyes:{none:null,"3d-glasses":18,"big-shades":19,"blue-eye-shadow":20,"classic-shades":21,"clown-eyes-blue":22,"clown-eyes-green":23,"eye-mask":24,"eye-patch":25,"green-eye-shadow":26,"horned-rim-glasses":27,"nerd-glasses":28,"purple-eye-shadow":29,"regular-shades":30,"small-shades":31,vr:32,"welding-goggles":33},head:{none:null,bandana:34,beanie:35,"blonde-bob":36,"blonde-short":37,"cap-forward":38,cap:39,"clown-hair-green":40,"cowboy-hat":41,"crazy-hair":42,"dark-hair":43,"do-rag":44,fedora:45,"frumpy-hair":46,"half-shaved":47,headband:48,hoodie:49,"knitted-cap":50,"messy-hair":51,"mohawk-thin":52,"mohawk-dark":53,mohawk:54,"orange-side":55,pigtails:56,"pilot-helmet":57,"pink-with-hat":58,"police-cap":59,"purple-hair":60,"red-mohawk":61,"shaved-head":62,"straight-hair-blonde":63,"straight-hair-dark":64,"straight-hair":65,"stringy-hair":66,"tassle-hat":67,tiara:82,"top-hat":68,"wild-blonde":69,"wild-hair":70,"wild-white-hair":71},mouth:{none:null,"black-lipstick":75,"hot-lipstick":76,"purple-lipstick":78},"mouth-accessory":{none:null,cigarette:72,pipe:73,vape:74,"medical-mask":77},neck:{none:null,choker:79,"gold-chain":80,"silver-chain":81},nose:{none:null,"clown-nose":83}}},e.ATTRIBUTES_LIST=["skin","blemish","ear","head","mouth","neck","nose","eyes","facial-hair","mouth-accessory"],e.ATTRIBUTES={base:["male-alien","male-ape","male-zombie","male-human-lighter","male-human-light","male-human-dark","male-human-darker","female-alien","female-ape","female-zombie","female-human-lighter","female-human-light","female-human-dark","female-human-darker"],blemish:["mole","rosy-cheeks","spots"],ear:["earring"],eyes:["3d-glasses","big-shades","blue-eye-shadow","classic-shades","clown-eyes-blue","clown-eyes-green","eye-mask","eye-patch","green-eye-shadow","horned-rim-glasses","nerd-glasses","purple-eye-shadow","regular-shades","small-shades","vr","welding-goggles"],"facial-hair":["big-beard","chinstrap","front-beard","front-beard-dark","goat","handlebars","luxurious-beard","mustache","muttonchops","normal-beard","normal-beard-black","shadow-beard"],head:["bandana","beanie","blonde-bob","blonde-short","cap","cap-forward","clown-hair-green","cowboy-hat","crazy-hair","dark-hair","do-rag","fedora","frumpy-hair","half-shaved","headband","hoodie","knitted-cap","messy-hair","mohawk","mohawk-dark","mohawk-thin","orange-side","peak-spike","pigtails","pilot-helmet","pink-with-hat","police-cap","purple-hair","red-mohawk","shaved-head","straight-hair","straight-hair-blonde","straight-hair-dark","stringy-hair","tassle-hat","tiara","top-hat","vampire-hair","wild-blonde","wild-hair","wild-white-hair"],mouth:["black-lipstick","buck-teeth","frown","hot-lipstick","purple-lipstick","smile"],"mouth-accessory":["cigarette","pipe","vape","medical-mask"],neck:["choker","gold-chain","silver-chain"],nose:["clown-nose"]},e.isValidTokenId=(e=>{let n=!1;return isNaN(e)||(e=parseInt(e),e-=t,n=0<=e&&e<a.MALE+a.FEMALE),n}),e.labelize=(e=>e?e.replace(/-/g," ").replace(/(^\w{1})|(\s+\w{1})/g,e=>e.toUpperCase()):""),e.getTokenId=((o,i=!1)=>{const r=o.gender;let l="female"===r?a.MALE:0;const d=e.SPRITES[r],c=Object.keys(e.SPRITES[r]).sort(n);let h=1;for(let e=c.length-1;e>=0;e--){const t=c[e],a=o[t]||"none",n=Object.keys(d[t]).sort(s);let r=n.indexOf(a||null);if(r<0){if(!i)throw new Error(`"${a}" is not a valid value for attribute "${t}"`);r=0}l+=r*h;const u=n.length;h*=u}return l+t}),e.getPunkFromTokenId=(o=>{o-=t;const i={gender:null};o<a.MALE?i.gender="male":(i.gender="female",o-=a.MALE);const r=i.gender,l=e.SPRITES[r],d=Object.keys(e.SPRITES[r]).sort(n),c=[];let h=1;for(let e=d.length-1;e>=0;e--){const t=d[e],a=Object.keys(l[t]),n=a.length;c.unshift(h),h*=n}for(let e=0;e<d.length;e++){const t=d[e],a=c[e],n=Math.floor(o/a),r=Object.keys(l[t]).sort(s);i[t]=r[n],"none"===i[t]&&(i[t]=null),o-=n*a}return i})})("undefined"==typeof window?module.exports:window),(()=>{const e={API_ENDPOINT:"http://localhost:8080/api"},t="0x4",a="Select...",n={METAMASK_NOT_FOUND:'You need an Ethereum wallet to mint NFTs! You can download metamask <a target="_blank" href="https://metamask.io/download/">here</a>',MINTING_IN_PROGRESS:'<img src="/assets/img/loader.gif"><span>It can take a few seconds...</span>',MINT_SUCCESS:'Punks minted successfully! Click <a target="_blank" href="//rinkeby.etherscan.io/tx/{tx}">here</a> to check the transaction on etherscan'},s={gender:"male",skin:"human-light",blemish:null,ear:null,eyes:null,"facial-hair":null,head:null,mouth:null,"mouth-accessory":null,neck:null,nose:null},o={...s};let i=!1,r=!1,l=null,d=null,c=null;const h=document.querySelector("#modal"),u=h.querySelector("#modal .modal-content"),m=document.querySelector("#modalMessage"),w=document.querySelector("#modalMessage .modal-content"),p=Array.from(document.querySelectorAll(".combo")),g=document.querySelector("#btnCloseModal"),y=document.querySelector("#btnClosePunkViewer"),k=document.querySelector("#btnAddToCart"),b=document.querySelector("#btnConnectWallet"),f=document.querySelector("#btnMintFirstButton"),v=document.querySelector(".result"),S=document.querySelector("#cartItems"),T=document.querySelector("#btnMint"),E=document.querySelector("#closeMessageButton"),I=document.querySelector("#cartTotal"),$=document.querySelector(".wallet"),M=document.querySelector(".wallet-list"),L=document.querySelector(".builder"),A=document.querySelector("#punkViewer"),q=document.querySelector("#punkViewer .punk-viewer-item"),P=document.querySelector("#punkViewerTitle"),N=document.querySelector("#traitsList"),O=document.getElementById("favicon"),R=()=>Array.from(S.querySelectorAll(".item")).map(e=>JSON.parse(decodeURIComponent(e.dataset.mintrequest))),_=async t=>{window.progress.start(),i=!0,U();let a=null;try{const n=await fetch(`${e.API_ENDPOINT}?method=getPunk&tokenId=${t}`);if(n.ok){const e=await n.json();return e}a=await n.text()}catch(e){a=e.message}finally{i=!1,window.progress.stop(),U(a)}},C=(e,t,a,n)=>(a=a||"var(--punk--comboSize)",n=n||o.gender,e&&t?"gender"!==e?SPRITES[n][e]?`calc(-${SPRITES[n][e][t]} * ${a})`:null:`calc(-${SPRITES[t].skin[o.skin]} * ${a})`:null),H=(e,t=h)=>{e?(document.body.style.overflow="hidden",t.classList.add("visible")):(document.body.style.overflow="initial",t.classList.remove("visible"))},z=(e,t="success")=>{e?(document.body.style.overflow="hidden",m.dataset.type=t,m.classList.add("visible"),w.innerHTML=e):(document.body.style.overflow="initial",m.classList.remove("visible"),w.innerHTML="")},j=e=>{const t=e.dataset.combo,n=o[t];e.dataset.empty=!n;const s=C("skin",o.skin);e.innerHTML=`\n    <div class="layer-container" style="background-image:${["skin","gender"].includes(t)?"":"url('assets/img/sprites.png')"};background-position:${s}">\n        <img class="layer" src="assets/img/sprites.png" style="object-position:${C(t,n)}" />\n    </div>\n    <div class="label-container">\n        <div class="label-head">${window.labelize(e.dataset.combo)}</div>\n        <div class="label">${n?window.labelize(n):a}</div>\n    </div>`,e.addEventListener("click",()=>{document.body.style.overflow="hidden";const e=C("skin",o.skin);let a=null;a="gender"===t?{male:window.SPRITES.male.skin[o.skin],female:window.SPRITES.female.skin[o.skin]}:window.SPRITES[o.gender][t];let n='<div class="options">';Object.keys(a).map(e=>({id:e,pos:a[e]})).forEach(a=>{let s=!1;"none"!==a.id||"none"!==o[t]&&o[t]?"none"!==a.id&&SPRITES[o.gender][t]&&SPRITES[o.gender][t][a.id]&&(s=o[t]===a.id):s=!0,n+=`<div data-id="${a.id}" data-empty="${"none"===a.id}" data-selected="${s}" class="option" onclick="selectSprite('${t}','${a.id}')">\n                <div class="layer-container" style="background-image:${["skin","gender"].includes(t)?"":"url('assets/img/sprites.png')"};background-position:${e}">\n                    <img class="layer" src="assets/img/sprites.png" style="object-position:${C(t,a.id)}" />\n                </div>\n                <div class="label">${window.labelize(a.id)}</div>\n            </div>`}),n+="</div>",u.innerHTML=n,H(!0)})},F=()=>{const e=C("skin",o.skin);p.forEach(t=>{const n=t.dataset.combo,s=o.gender,i=o[n],r="gender"!==n&&!window.SPRITES[s][n];t.dataset.hidden=r;const l=!i||"none"===i;t.dataset.empty=l;const d=t.querySelector(".layer"),c=t.querySelector(".label");d.style=`object-position:${C(n,i)}`,d.dataset.empty=l,c.innerHTML=l?a:window.labelize(i);const h=t.querySelector(".layer-container");if(h.style.backgroundPosition=e,"gender"===n)newPos=e;else if(o[n]&&SPRITES[s][n]&&void 0!==SPRITES[s][n][o[n]])newPos=C(n,o[n]);else{t.dataset.empty="true",newPos=C(n,null);const e=t.querySelector(".label");e.innerHTML=a}t.querySelector(".layer").style.objectPosition=newPos})},x=({node:e,state:t,imgSelector:a,size:n}={})=>{e=e||v,t=t||o,a=a||".result > img",n=n||"var(--punk--result)",t===o&&(e.dataset.tokenid=window.getTokenId(o,!0));const s=Array.from(document.querySelectorAll(a));s.forEach(e=>{if(t[e.dataset.layer]&&"none"!==t[e.dataset.layer]&&window.SPRITES[t.gender][e.dataset.layer]&&void 0!==window.SPRITES[t.gender][e.dataset.layer][t[e.dataset.layer]]){e.dataset.empty="false";const a=C(e.dataset.layer,t[e.dataset.layer],n,t.gender);a?e.style.objectPosition=a:e.dataset.empty="true"}else e.dataset.empty="true"})},U=e=>{e&&z(e,"error");const t=parseInt(v.dataset.tokenid),a=R();i||r?(k.setAttribute("disabled",""),i&&(k.innerHTML="Loading...")):(k.innerHTML="Add to cart",a.find(e=>e.id===t)?k.setAttribute("disabled",""):k.removeAttribute("disabled")),a.length?r?(T.classList.remove("hidden"),T.setAttribute("disabled",""),T.innerHTML="Minting..."):(T.innerHTML=`Mint ${a.length} punk${a.length>1?"s":""}`,T.classList.remove("hidden"),T.removeAttribute("disabled")):T.classList.add("hidden");let n=0;a.forEach(e=>n+=e.price),I.innerHTML=parseFloat(n/1e9)},D=()=>{const e=parseInt(v.dataset.tokenid),t=R();e&&!t.includes(t=>e===t.id)&&(async()=>{const t=await _(e);if(t){const a=`https://infura-ipfs.io/ipfs/${t.imageCid}`;S.insertAdjacentHTML("beforeend",`<div data-tokenid="${t.tokenId}" data-price="${t.price}" data-mintrequest="${encodeURIComponent(JSON.stringify(t.mintRequest))}" class="item" title="#${t.tokenId}">\n              <a href="#${t.tokenId}" class="img-container"><img src="${a}" /></a>\n              <button>Remove</button>\n            </div>`),O.setAttribute("href",a),O.dataset.updated="true",U(),Object.assign(o,s),F(),x();const n=S.querySelector(`[data-tokenid="${e}"] > button`);n&&n.addEventListener("click",()=>{const t=S.querySelector(`[data-tokenid="${e}"]`);t&&t.remove(),U()})}})()},B=async()=>{let e=null;try{const t=await V(!0);if("not-found"===t)z(n.METAMASK_NOT_FOUND,"error");else if("connected"===t){if(d){const e=R();if(e.length){window.progress.start(),r=!0,U();const t=e.reduce((e,t)=>e+t.price,0);let a=await d.methods.mint(e).estimateGas({from:c});a+=Math.floor(.1*a);const s=await d.methods.mint(e).send({from:c,gas:a.toString(),value:l.utils.toWei(t.toString(),"gwei")}).once("transactionHash",()=>{z(n.MINTING_IN_PROGRESS,"mint")});z(n.MINT_SUCCESS.replace("{tx}",s.transactionHash)),S.innerHTML="",G()}}}else await V()}catch(t){e=t.message}finally{r=!1,window.progress.stop(),U(e)}},K=async()=>{const e=await V(!0);"not-found"===e&&z(n.METAMASK_NOT_FOUND,"error")},V=async a=>{window.progress.start();try{let n="not-found",s=Web3.givenProvider;if(s){l||(l=new Web3(s),s.on("connect",()=>V()),s.on("disconnect",()=>V()),s.on("chainChanged",()=>V()),s.on("accountsChanged",()=>V()));const o=await l.eth.getAccounts();if(c=o[0],!c&&a){const e=await s.request({method:"eth_requestAccounts"});c=e[0]}if(c){const o=await s.request({method:"eth_chainId"});if(o!==t)n="invalid-chain",a&&await s.request({method:"wallet_switchEthereumChain",params:[{chainId:t}]});else{if(!d){const t=await fetch(`${e.API_ENDPOINT}?method=getContract`);if(t.ok){const e=await t.json();d=new l.eth.Contract(e.abi,e.address)}else{const e=await t.text();if(e)throw new Error(e)}}d&&(n="connected")}}else n="disconnected"}return document.querySelector("body").dataset.web3=n,await G(),n}catch(e){z(e.message,"error")}finally{window.progress.stop()}},G=async()=>{if(d){$.dataset.status="loading";try{const e=[];let t=!1,a="";const n=v.innerHTML;do{let s=null;try{s=await d.methods.tokenOfOwnerByIndex(c,e.length).call({from:c});const o=window.getPunkFromTokenId(parseInt(s));a+=`<div onclick="window.openOpenSea('${s}')" title="#${s}" class="wallet-item-container"><div data-tokenid="${s}" data-walletitem="${e.length}" class="wallet-item">${n}</div><div class="wallet-item-tokenid">${s}</div></div>`,e.push({...o,base:`${o.gender}-${o.skin}`})}catch(e){t=!0}}while(!t);M.innerHTML=a,setTimeout(()=>{const t=Array.from(document.querySelectorAll(".wallet-item"));t.forEach((t,a)=>{const n=e[a],s="var(--punk--cartSize)",o=t,i=`[data-walletitem="${a}"] > img`;x({node:o,state:n,imgSelector:i,size:s})}),$.dataset.status=t.length?"connected":"empty"})}catch(e){$.dataset.status="disconnected",z(e.message,"error")}}else $.dataset.status="disconnected"},W=()=>{const e=window.location.hash;let t=!1;if(e&&/^#[0-9]+$/.test(e))try{const a=parseInt(e.replace("#",""));if(a>=window.MIN_TOKENID&&a<=MAX_TOKENID){P.innerHTML=a,q.innerHTML=v.innerHTML;const e=window.getPunkFromTokenId(a),n={...e,base:`${e.gender}-${e.skin}`},s="var(--punk--result)",o=q,i=".punk-viewer-item > img";x({node:o,state:n,imgSelector:i,size:s});let r="";["gender",...window.ATTRIBUTES_LIST].forEach(t=>{e[t]&&(r+=`<div class="punk-viewer-traits-item"><div>${window.labelize(t)}</div><div>${window.labelize(e[t])}</div></div>`)}),N.innerHTML=r,t=!0}}catch(t){console.error(`invalid hash => ${e}`)}H(t,A)},J=()=>{H(!1),H(!1,A),window.history.pushState(null,null," ")};window.addEventListener("keydown",e=>{"Escape"===e.key&&J()}),window.selectSprite=((e,t)=>{o[e]=t,x();const a=Array.from(h.querySelectorAll(".option"));a.forEach(e=>e.dataset.selected=e.dataset.id===t),H(!1),document.body.style.overflow="initial",F(),U()}),window.openOpenSea=(e=>{window.open(`https://testnets.opensea.io/assets/${d._address}/${e}`,"_blank").focus()}),window.onWeb3Loaded=(async()=>V()),window.addEventListener("hashchange",W),p.forEach(e=>j(e)),k.addEventListener("click",D),T.addEventListener("click",B),b.addEventListener("click",K),f.addEventListener("click",()=>L.scrollIntoView({behavior:"smooth"})),g.addEventListener("click",J),y.addEventListener("click",J),E.addEventListener("click",()=>z(null)),x(),W();let X=1,Y=setInterval(()=>{O.dataset.updated?Y&&clearInterval(Y):(O.setAttribute("href",`/assets/img/favicon/${X}.png`),X++,X>9&&(X=0))},1e3)})(),(e=>{const t=200;let a=!1;const n=()=>{if(a){const t=(100-a.dataset.value)*(.1*Math.random());a.dataset.value=parseFloat(a.dataset.value)+t,a.style.width=`${a.dataset.value}%`,e.requestAnimationFrame(n.bind(null,a))}};e.progress={start(){a&&document.body.removeChild(a),a=document.createElement("div"),a.id="progress",a.dataset.value=0,document.body.appendChild(a),n(a)},stop:async()=>new Promise(n=>{const s=a;a=null,e.requestAnimationFrame(()=>{s&&(s.style.width="100%",setTimeout(()=>{document.body.removeChild(s),n()},t))})})}})(window);
